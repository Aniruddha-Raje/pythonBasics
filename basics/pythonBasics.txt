Adding sinble quote in a String  -> 
print("who's this")

Adding double quotes in a String -> 
print('who\'s "this"')

Print as it is -> 
print(r'go\nhere')

s = "abcd"
s[0] => a
s[-1] => d
s[-2] => c
s[1:3] => bc
s[1:] => bcd
s[:2] => ab
===================================

A variable name must start with a letter or the underscore character,
Cannot start with a number

If you try to combine a string and a number, Python will give you an error

There are three numeric types in Python:

# Int, or integer - A whole number, positive or negative, without decimals, of unlimited length.
x = 1    

# Float, or "floating point number" - A number, positive or negative, containing one or more decimals.
#Float can also be scientific numbers with an "e" to indicate the power of 10.
y = 10.99e100
yy = 12E4

# Complex numbers are written with a "j" as the imaginary part
z = 1j   

print(type(x))

====================================

Castings -

int(10.5) => 10

float(1) => 1.0

Cast to String -
str(100) => "100"

====================================

str = "abcdefg"

str.upper()

str.lower()

str.capitalize()

str.isalpha()

str.isupper()

str.islower()

str.isnumeric()

str.isspace()

str.istitle()

====================================

Arrays -
array = []


====================================
List -

//creation
list = ["abc", "pqr"]
list = ["abc", 10, 5.5]
list = ["abc", 1, 2,3, 4, 5]

list[0:3]
['abc', 1, 2]

list[2:]
[2, 3, 4, 5]

list[:3]
['abc', 1, 2]

list[-1]
5

list1 = [1,2]
list2 = ["abc","pqr"]
list3 = [list1,list2]

//Prints entire list
print(list)

//Prints 0th index element
print(list[0])

//Insert value at a specific index
list.insert(0,"ccc")

//Remove element "ddd"
list.remove("ddd")

//Add at the end
list.append("xyz")

//Remove first inserted element
list.pop(0)

//Remove last inserted element
list.pop()

//find size of the list
len(list)

//Delete element at index 0
del list[0]

//Delete element from 2nd index
del list[2:]

//Sort enitre list
list.sort()

//Add multiple values at the end
list.extend(["aaa","bbb"])

//Copy list contents into list2
list2 = list.copy()

//Fetch index of element "abc"
list.index("abc")

//Get occurance count of element "abc"
list.count("abc")

//Reverse the list
list.reverse()

//Won't work is list is not homogeneous
max(list)
min(list)
sum(list)

===========================================

Tuple -
It is immutable(cannot be changed) unlike list
Index starts from 1 instead of 0

//Tuple creation
tuple = (1,2,3)

//Get index of a value
tuple.index(1)

//Get occurances of a value
tuple.count(1)

//Tuple deletion
del tuple

===========================================

Set - 
Collection of unique elements
Order is not guranteed

//Set creation
set = {"aaa", "bbb", "ccc", "aaa"}

//Add element in the set
set.add("ddd")

//Create a new set from existing
set2 = set.copy()

//Add multiple elements in a set
set.update(["eee", "fff"])

//Return True if all items set are present in set2
set2.issubset(set) 

//Removes value - returns error if value if not found
set.remove("banana")

//Removes value - gracefully handles if value is not found
set.discard("banana")

//Remove element
set.pop()

//Removes all the elements from the set
set.clear()

//Deletes set
del set

=========================================
//Creates a union of the two sets
set3 = set.union(set2)

//Returns a set, that are the intersection of to other sets
set3 = set.intersection(set2)

//Removes the items in this set that is not present in other, specified set(s)
set.intersection_update(set2)

//Returns elements from set, which are not present in set2
set.difference(set2)

//Removes elements from set, which occured in set2 
set.difference_update(set2)

===========================================

Dictionary - 
A dictionary is a collection which is unordered, changeable and indexed.

dict =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

//Modify a dictionary
dict["year"] = 2018

//updates or inserts the items to the dictionary
dict.update({"color": "Red", "type":"racing"})

//Copy one dict into another
dict2 =	dict.copy()

//Print values of key "brand"
print(dict.get('brand'))

//Print items as array
print(dict.items())

//Print only Keys
print(dict.keys())

//Print only Values
print(dict.values())

//Removes all the elements from the dictionary
dict.clear()

//Delete model from the dictionary
del dict["model"]

//Delete element with "model" key
dict.pop("model")

//removes the last item
dict.popitem()

=============================

If else condition -

a = 10
b = 20

if a > b:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
else:
  print("b is greater than a")

=============================

Shorthand if else - 
print("a is greater than b") if a > b else print("equals") if a == b else print("b is greater than a")

=============================

if a < b and b > a:
	print("b is greater than a")

if a > b or a < b:
	print("At least one of the conditions is True")

=============================

While Loop -

i = 0

while i < 6: 
	if i == 3:
    		continue
	i += 1
	if i == 5:
    		break
  	print(i)

==============================

For Loops -

list = ["abc", 1, 2,3, 4, 5]
tuple = (1,2,3)
set = {"aaa", "bbb", "ccc", "aaa"}
dict =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
=========================
for x in list:
  print(x)
=========================
for x in list:
	if x == 1
		continue
	if x == 5
		break
	print(x)
else:
  	print("Loop completed!")
=========================
str = "hello world"
for x in str:
	print(x)
=========================
//Print 0 - 5
for x in range(6):
  	print(x)
========================
//Print 2 - 5
for x in range(2, 6):
  	print(x)
========================
//Prints 2 - 10, but increment is by 2 instead of 1 which is default
for x in range(2,10,2):
  print(x)


========================================================
Iterator -

tuple = ("apple", "banana", "cherry")
str = "Hello"

itr1 = iter(tuple)
itr2 = iter(str)

print(next(itr1))
print(next(itr2))

========================================================

Functions -
def my_function(name, lang = "Python"):
	print("Hello! " + name + ", You are learning " + lang)
	return "Function finished!"

print(my_function("Aniruddha"))

========================================

Class -

class Person:
	def __init__(self, name, age):
    		self.name = name
    		self.age = age

  	def display(self):
		print("Name => " + self.name +"\n Age => " + self.age)


p = Person("Aniruddha", 26)
p.age = 27
p.display()
del p


















